name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.21"
  DB_URL: "postgresql://root:secret@localhost:5432/simple_bank?sslmode=disable"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    # Service containers untuk PostgreSQL
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: root
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432
        # Set health checks untuk wait sampai postgres ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          # Install migrate tool
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/
          # Install make if not available
          sudo apt-get update && sudo apt-get install -y make

      - name: Setup Go tools
        run: |
          go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

      - name: Download dependencies
        run: make deps

      - name: Run database migrations
        run: make migrateup-ci

      - name: Generate code and run tests
        run: make ci-test

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run security checks
        run: |
          go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
          make security

      - name: Run dependency vulnerability scan
        run: |
          go install github.com/sonatypecommunity/nancy@latest
          go list -json -deps ./... | nancy sleuth

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build application
        run: make ci-build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: bank-microservice
          path: main
